version: "3"

services:
  frontend:
    container_name: Transcendence_frontend
    build:
      context: ./front-end
    restart: always
    volumes:
      - ./front-end:/app
      - frontend_node_module:/app/node_modules
      - ../shared:/shared
    ports:
      - "8081:8081"
    links: # Using links since it connects to the backend port no matter what hostport
      - backend

  backend:
    container_name: Transcendence_backend
    build:
      context: ./back-end
    restart: always
    env_file:
      - ./back-end/env/.env
    volumes:
      - ./back-end:/app
      - backend_node_module:/app/node_modules
      - ../shared:/shared
    ports:
      - "3000:3000" # Main API
      - "3001:3001" # Game Socket
      - "3002:3002" # Chat Socket
    depends_on:
      - database

  loadbalancer:
    container_name: Transcendence_nginx
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx/conf:/etc/nginx/
    ports:
      - "8080:80"
    environment:
      - ./nginx/.env
    links:
      - frontend
      - backend

  database:
    container_name: Transcendence_database
    image: "postgres:14"
    restart: always
    env_file:
      - ./back-end/env/.env
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data

  pgadmin:
    container_name: Transcendence_dbadmin
    image: dpage/pgadmin4
    restart: always
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
      - ./pgadmin/pgpass:/pgpass
    env_file:
      - ./back-end/env/.env
    ports:
      - "5050:80"
    links:
      - "database:pgsql-server"
    depends_on:
      - database

volumes: # create volume for postgres
  backend_node_module:
  frontend_node_module:
  db: {}
  pgadmin:
